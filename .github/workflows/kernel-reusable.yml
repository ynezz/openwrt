name: Build Kernel Reusable Workflow

on:
  workflow_call:
    inputs:
      config_seed:
        default: 'CONFIG_ALL_KMODS=y\n'
        required: false
        type: string
jobs:
  determine_targets:
    name: Set targets
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.find_targets.outputs.target }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set targets
        id: find_targets
        run: |
          export TARGETS="$(perl ./scripts/dump-target-info.pl targets 2>/dev/null \
            | sort -u -t '/' -k1,1 \
            | awk '{ print $1 }' \
            | sed 's/mt7620/mt7621/')"

          JSON='['
          FIRST=1
          for TARGET in $TARGETS; do
            [[ $FIRST -ne 1 ]] && JSON="$JSON"','
            JSON="$JSON"'"'"${TARGET}"'"'
            FIRST=0
          done
          JSON="$JSON"']'

           echo -e "\n---- targets ----\n"
           echo "$JSON"
           echo -e "\n---- targets ----\n"

           echo "::set-output name=target::$JSON"

  build:
    name: Build Kernel with external toolchain
    needs: determine_targets
    runs-on: ubuntu-latest
    strategy:
       fail-fast: False
       matrix:
         target: ${{fromJson(needs.determine_targets.outputs.target)}}

    container: registry.gitlab.com/openwrt/buildbot/buildworker-3.4.1

    steps:
      - name: Checkout master directory
        uses: actions/checkout@v2
        with:
          path: openwrt

      - name: Checkout packages feed
        uses: actions/checkout@v2
        with:
          repository: openwrt/packages
          path: openwrt/feeds/packages

      - name: Checkout luci feed
        uses: actions/checkout@v2
        with:
          repository: openwrt/luci
          path: openwrt/feeds/luci

      - name: Checkout routing feed
        uses: actions/checkout@v2
        with:
          repository: openwrt/routing
          path: openwrt/feeds/routing

      - name: Checkout telephony feed
        uses: actions/checkout@v2
        with:
          repository: openwrt/telephony
          path: openwrt/feeds/telephony

      - name: Fix permission
        run: |
          chown -R buildbot:buildbot openwrt

      - name: Initialization environment
        run: |
          TARGET=$(echo ${{ matrix.target }} | cut -d "/" -f 1)
          SUBTARGET=$(echo ${{ matrix.target }} | cut -d "/" -f 2)
          echo "TARGET=$TARGET" >> "$GITHUB_ENV"
          echo "SUBTARGET=$SUBTARGET" >> "$GITHUB_ENV"

      - name: Update & Install feeds
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Parse toolchain file
        working-directory: openwrt
        run: |
          TOOLCHAIN_FILE=$(curl "https://downloads.cdn.openwrt.org/snapshots/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/sha256sums" \
            | sed -n -e 's/.*\(openwrt-toolchain.*\).tar.xz/\1/p')

          echo "TOOLCHAIN_FILE=$TOOLCHAIN_FILE" >> "$GITHUB_ENV"

      - name: Download external toolchain
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: |
          wget -O - https://downloads.cdn.openwrt.org/snapshots/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${TOOLCHAIN_FILE}.tar.xz \
            | tar --xz -xf -

      - name: Configure external toolchain
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: |
          printf '${{ inputs.config_seed }}' | tee --append .config

          ./scripts/ext-toolchain.sh \
            --toolchain ${{ env.TOOLCHAIN_FILE }}/toolchain-* \
            --overwrite-config \
            --config ${{ env.TARGET }}/${{ env.SUBTARGET }}

          make defconfig

      - name: Show configuration
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: ./scripts/diffconfig.sh

      - name: Build tools
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: make tools/install -j$(nproc) BUILD_LOG=1

      - name: Build toolchain
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: make toolchain/install -j$(nproc) BUILD_LOG=1

      - name: Build Kernel
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: make target/compile -j$(nproc) BUILD_LOG=1

      - name: Show build failures
        if: failure()
        working-directory: openwrt
        run: |
          if grep -qr 'make\[[[:digit:]]\].*Error [[:digit:]]$' logs; then
            printf "\n====== Showing Make errors found in the log files ======";
            for file in $(grep -lr 'make\[[[:digit:]]\].*Error [[:digit:]]$' logs); do
              printf "\n====== Make errors from $file ======\n" ;
              grep -r -C10 'make\[[[:digit:]]\].*Error [[:digit:]]$' $file ;
            done
          fi

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARGET }}-${{ env.SUBTARGET }}-logs
          path: "openwrt/logs"
