name: Build Kernel

on:
  push:
  pull_request:
    paths:
      - '.github/workflows/kernel.yml'
      - 'include/kernel-*'
      - 'package/kernel/**'
      - 'target/linux/generic/**'
jobs:
  determine_targets:
    name: Set targets
    runs-on: ubuntu-latest
    outputs:
      target: ${{ steps.find_targets.outputs.target }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set targets
        id: find_targets
        run: |
          export TARGETS="ipq40xx/generic"

          JSON='['
          FIRST=1
          for TARGET in $TARGETS; do
            [[ $FIRST -ne 1 ]] && JSON="$JSON"','
            JSON="$JSON"'"'"${TARGET}"'"'
            FIRST=0
          done
          JSON="$JSON"']'

           echo -e "\n---- targets ----\n"
           echo "$JSON"
           echo -e "\n---- targets ----\n"

           echo "::set-output name=target::$JSON"

  build:
    name: Build Kernel with external toolchain
    needs: determine_targets
    runs-on: ubuntu-latest
    strategy:
       fail-fast: False
       matrix:
         target: ${{fromJson(needs.determine_targets.outputs.target)}}

    container: registry.gitlab.com/openwrt/buildbot/buildworker-3.4.1

    steps:
      - name: Checkout master directory
        uses: actions/checkout@v2
        with:
          path: openwrt

      - name: Fix permission
        run: |
          chown -R buildbot:buildbot openwrt

      - name: Initialization environment
        run: |
          TARGET=$(echo ${{ matrix.target }} | cut -d "/" -f 1)
          SUBTARGET=$(echo ${{ matrix.target }} | cut -d "/" -f 2)
          echo "TARGET=$TARGET" >> "$GITHUB_ENV"
          echo "SUBTARGET=$SUBTARGET" >> "$GITHUB_ENV"

      - name: Parse toolchain file
        working-directory: openwrt
        run: |
          TOOLCHAIN_STRING="$(curl "https://downloads.cdn.openwrt.org/snapshots/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/sha256sums" \
            | grep ".*openwrt-toolchain.*tar.xz")"
          TOOLCHAIN_FILE=$(echo "$TOOLCHAIN_STRING" | sed -n -e 's/.*\(openwrt-toolchain.*\).tar.xz/\1/p')
          TOOLCHAIN_SHA256=$(echo "$TOOLCHAIN_STRING" | cut -d ' ' -f 1)

          echo "TOOLCHAIN_FILE=$TOOLCHAIN_FILE" >> "$GITHUB_ENV"
          echo "TOOLCHAIN_SHA256=$TOOLCHAIN_SHA256" >> "$GITHUB_ENV"

      - name: Cache external toolchain
        id: cache-external-toolchain
        uses: actions/cache@v3
        with:
          path: openwrt/${{ env.TOOLCHAIN_FILE }}
          key: ${{ env.TOOLCHAIN_FILE }}-${{ env.TOOLCHAIN_SHA256 }}

      - name: Download external toolchain
        if: ${{ steps.cache-external-toolchain.outputs.cache-hit != 'true' }}
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: |
          wget -O - https://downloads.cdn.openwrt.org/snapshots/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${TOOLCHAIN_FILE}.tar.xz \
            | tar --xz -xf -

      - name: Configure external toolchain
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: |
          ./scripts/ext-toolchain.sh \
            --toolchain ${{ env.TOOLCHAIN_FILE }}/toolchain-* \
            --overwrite-config \
            --config ${{ env.TARGET }}/${{ env.SUBTARGET }}

          echo CONFIG_ALL_KMODS=y >> .config
          echo CONFIG_TARGET_MULTI_PROFILE=y >> .config
          echo CONFIG_TARGET_ALL_PROFILES=y >> .config
          # echo CONFIG_TARGET_PER_DEVICE_ROOTFS=y >> .config

          make defconfig

      - name: Show configuration
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: ./scripts/diffconfig.sh

      - name: Build all
        shell: su buildbot -c "sh -e {0}"
        working-directory: openwrt
        run: make -j$(nproc) BUILD_LOG=1

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.TARGET }}-${{ env.SUBTARGET }}-logs
          path: "openwrt/logs"
